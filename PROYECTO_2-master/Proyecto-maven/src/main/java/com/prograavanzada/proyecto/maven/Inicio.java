/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.prograavanzada.proyecto.maven;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import gt.url.edu.demoestructuras.arboles.LinkedBinaryTree;


/**
 *
 * @author Sara
 */
public class Inicio extends javax.swing.JFrame {
JFileChooser seleccionar = new JFileChooser();
        File archivo;
        FileInputStream entrada;
        FileOutputStream salida;
        DynamicStack  Stack= new DynamicStack();
        DynamicQueue queue= new DynamicQueue(); 
        String word= " ";
        String documento;
        int pos;
        int pos2;
    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
    }
    public String AbrirArchivo (File archivo){
                documento = "";
        try {
            entrada = new FileInputStream(archivo);
            int i;
            while ((i=entrada.read()) != -1){
                char caracter = (char) i;
                documento += caracter;
            }
        }catch (Exception e){ 
        }
        return documento;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAbrir = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtarea = new javax.swing.JTextArea();
        txtPrueba = new javax.swing.JTextField();
        Prueba = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Boton_Principal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        txtarea.setColumns(20);
        txtarea.setRows(5);
        jScrollPane1.setViewportView(txtarea);

        Prueba.setText("Prueba");
        Prueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PruebaActionPerformed(evt);
            }
        });

        jButton1.setText("Mostrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Boton_Principal.setText("jButton2");
        Boton_Principal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_PrincipalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(btnAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(Prueba))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(53, 53, 53)
                        .addComponent(Boton_Principal)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAbrir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Prueba)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Boton_Principal, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPrueba, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
        
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        if (seleccionar.showDialog(null, "Abrir") == JFileChooser.APPROVE_OPTION){
            archivo = seleccionar.getSelectedFile();
            if(archivo.canRead()){
                if(archivo.getName().endsWith("txt")){
                    String documento = AbrirArchivo(archivo);
                    txtarea.setText(documento);
                   // txtPrueba.setText(documento);
                }else{
                    JOptionPane.showMessageDialog(null, "Archivo No Compatible");
                }
            }
        }
    }//GEN-LAST:event_btnAbrirActionPerformed

    private void PruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PruebaActionPerformed
        // LLAMAR AL METODO QUE LO HACE TODO
    }//GEN-LAST:event_PruebaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        for(int i=0; i< Stack.size(); i++){
            txtPrueba.setText((java.lang.String) Stack.pop());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Boton_PrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_PrincipalActionPerformed
        //PalabraPorLinea(documento, pos);
       // txtPrueba.setText(word);
        funcional();
        
    }//GEN-LAST:event_Boton_PrincipalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton_Principal;
    private javax.swing.JButton Prueba;
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtPrueba;
    private javax.swing.JTextArea txtarea;
    // End of variables declaration//GEN-END:variables

    private String String(char charAt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    private String PalabraPorLinea(String caracter, int pos1){
        int i =pos1;
        word=" ";
            while(caracter.charAt(i)!= '\r'){
                if(caracter.charAt(i)!= ' '&& i<caracter.length()){
                     word+= caracter.charAt(i);
                     i++;
                }
            }
        return word;
        
    }
    private int numeroPosicion(int ultimaLinea){
        for (int i =ultimaLinea; i<documento.length();i++){
            if(documento.charAt(i)== '\n'){
                pos=i;
                  break; 
                }
            }
        return pos;
        }
           
        public int crearQueue(int posicion){
            String caracter= txtarea.getText();
           int i=0;
      
          for( i=posicion;i<caracter.length();i++){
              if ((caracter.charAt(i) != '\r') && (caracter.charAt(i)!= ' ') ){
                         queue.enqueue(caracter.charAt(i));
                         } else if ((caracter.charAt(i) == '\r')){
                          break;   
             }
          }
               JOptionPane.showMessageDialog(null, "queue Creado"); 
                return i;
        }
        public int crearStack(int posicion){
            String caracter= txtarea.getText();
            int i=0;
            for( i=posicion;i<caracter.length();i++){
               if ((caracter.charAt(i) != '\r') && (caracter.charAt(i)!= ' ') ){
                         Stack.push(caracter.charAt(i));
                         } else if ((caracter.charAt(i) == '\r')){
                          break;   
                  }
               
               
            }
        JOptionPane.showMessageDialog(null, "Stack Creado"); 
        return i;
        }
        public void crearBtree(){
            
        }
        public void crearLinkedList(){
            
        }
        public void crearDoubleLinkedList(){
            
        }
        public void crearCircularLinkedList(){
            
        }
      
    public int Comparar(String estructura){
        int n;  

          String c;
         c = estructura;
          
           if (" stack".equals(c)){
                n=1;
           }else if (" queue".equals(c)){
                n=2;
           }else if (" linkedlist".equals(c)){
                n=3;
           }else if(" circularlinkedlist".equals(c)){
                n=4;
           }else if(" doublelinkedlist".equals(c)){
                n=5;
           }else if (" btree".equals(c)){
               n=6;
           }else{
               n=7;
           }
           return n;
     }
    public int CrearEstructura(int opcion, int posicion){
          
            int nposFinal=0;
                     switch (opcion){
                case 1: nposFinal=crearStack(posicion);
                    break;
                case 2: nposFinal= crearQueue(posicion);
                    break;
                case 3: crearLinkedList();
                    break;
                case 4: crearDoubleLinkedList();
                    break;
                case 5: crearBtree();
                       
                    break;
                default: JOptionPane.showMessageDialog(null, "Estructura Invalida");             
            }  
                     return nposFinal;
    }
    public void funcional(){
        int var;
        int npos;
        while(pos< documento.length()){
           String estructura= PalabraPorLinea(documento,pos);
           var = Comparar(estructura);
           npos = numeroPosicion(pos);
           npos += 1;
           npos=(CrearEstructura(var,npos)+2);
           pos=npos;
        }
    }  
}
